0.
저는 정제된 데이터를 사용해 고객의 이탈을 예측하는 머신 러닝 모델을 구현해 보았습니다.
1.
구현한 모델은 총 세 가지로 로지스틱 회귀 모델, 랜덤 포레스트 모델, 그리고 그래디언트 부스팅 머신 입니다.
모델의 원리와 장단점을 짧게 설명하고 넘어가도록 하겠습니다.

로지스틱 회귀 모델은 이진 분류 문제에 적합한 문제로 고객의 이탈 여부를 예측하는 이진 분류 문제를 해결하기에 적합한 모델입니다.
로지스틱 회귀는 입력 특성의 가중치 합을 선형 결합으로 계산하며, 그 결과를 시그모이드 함수를 이용해 0과 1 사이의 값으로 반환합니다.
변환된 값이 0.5보다 크다면 해당 데이터를 양의 클래스로, 그렇지 않으면 음의 클래스로 분류합니다.

로지스틱 회귀 모델의 장점은 빠른 계산이 가능하며, 선형성을 갖는 데이터에 적합한 모델입니다.
또한 각 변수의 계수는 해당 변수의 중요도와 방향성을 나타내어 모델의 해석에 도움을 줍니다.

단점으로는 비선형 데이터 패턴을 잘 파악하지 못할 수 있다는 것과 많은 특성을 가진 복잡한 데이터셋에서는 과적합이 발생할 수 있다는 것입니다.
이를 방지하기 위해 정규화가 필수적입니다.

랜덤 포레스트 모델은 결정 트리 기반의 앙상블 학습 방법으로 원본 데이터셋에서 중복을 허용하여 샘플을 무작위로 추출하여 개별 결정 트리를 학습합니다.
각 트리별로 특성의 일부만 무작위로 선택하여 트리의 다양성을 증가시키며, 이는 과적합을 방지하는데 도움을 줍니다.
분류 문제의 경우, 개별 트리의 예측을 집계하여 가장 많은 표를 받은 클래스를 최종적으로 선택합니다.

랜덤 포레스트 모델의 장점으로는 비선형 데이터의 패턴도 파악이 가능한 점이 있으며, 여러 개의 트리를 학습시키므로 과적합이 방지됩니다.
또한, 결측치 처리가 가능하여 데이터 전처리에 대한 부담이 적어진다는 점도 장점입니다.

단점으로는 많은 트리를 사용하므로 모델의 크기가 크고 복잡함으로 모델의 동작을 해석하기 어려울 수 있습니다.
또한 대량의 데이터셋에서는 학습 속도가 다소 느려질 수 있습니다.

마지막인 그래디언트 부스팅 머신은 모든 데이터 포인트에 대한 초기 예측값을 설정한 뒤,
현재 모델의 예측과 실제 값 사이의 오차를 계산하고, 오차를 타깃으로 새로운 결정 트리를 학습시킵니다.
학습한 트리를 사용하여 현재 모델의 예측을 업데이트하고 오차가 충분히 줄어들 때까지 해당 단계를 반복합니다.

장점으로는 일반적으로 높은 성능을 보여주며, 적은 데이터로도 효과적인 학습이 가능하고,
단점으로는 다른 알고리즘에 비해 학습 시간이 길 수 있으며, 데이터가 너무 적다면 과적합 위험이 있습니다.

2.
다음은 모델에 학습시킨 데이터 컬럼입니다.
이탈과 관련된 지표를 선정하여 학습 데이터로 구성하였습니다.
고객별 월 평균 거래 횟수, 평균 접속 주기, 평균 배송료 등이 있습니다.
학습 데이터의 특징으로는 모두 수치형 데이터이며, 모델 별 베이스 모델의 특성 중요도를 기준으로 데이터를 정제했습니다.
초기엔 범주형 데이터도 학습 데이터에 있었으나, 특성 중요도를 따져보니 유의미한 지표가 아니라 판단하여 차후 제거했습니다.

3.
전체 학습 데이터를 2022년 4월 이전 가입자와 이후 가입자로 분류하고, 이전 가입자를 기존 고객, 이후 가입자를 신규 고객으로 분류했습니다.
기존 고객을 훈련, 검증, 시험 데이터로 분류하여 모델에 적용하였습니다.
또한 신규 고객 데이터를 따로 추출한 뒤 모델에 적용하여 신규 고객들의 이탈 여부도 예측해 보고자 했습니다.

4. 
본격적인 모델링 전, 아무런 튜닝을 하지 않은 각 모델들을 베이스 모델로 지정했습니다.
세 베이스모델 모두 과적합이 의심되는 모델이라 모델 개선 과정에서 과적합을 해결하기 위한 노력을 기울였습니다.
먼저, SMOTE를 사용해 데이터 불균형을 완화하고자 하였고,
k-겹 교차 검증과 그리드 서치를 이용해 최적의 파라미터 값을 찾았습니다.
로지스틱 모델의 경우, 과적합 방지를 위해 엘라스틱넷 정규화를 적용하였고, 이외의 모델들은 트리의 깊이, 노드 개수 등을 조절해가며
최적의 모델을 찾고자 했습니다.
그리고 각 모델의 특성 중요도를 바탕으로 데이터를 추가적으로 처리하여 모델의 성능을 높히고자 했습니다.
세 모델 모두 높은 성능을 기록했으나, 랜덤 포레스트 모델이 전반적으로 가장 우수한 성능을 보였습니다.

5.
가장 우수한 성능을 보인 랜덤포레스트 모델을 최종 모델로 선택하였고, 해당 모델을 좀 더 설명하도록 하겠습니다.
그래프에 나와있듯이, 고객의 연평균 거래 금액과 월평균 거래횟수, 평균 프로모션 금액 등이 중요한 지표로 나타났습니다.
각 파라미터에 대한 설명을 조금 하겠습니다.
이 모델은 총 20개의 결정 트리를 사용했으며, 과적합을 방지하기 위해 트리의 깊이를 2로 지정하여 모델을 단순화 시켰습니다.
또한 리프노드에 있어야 하는 샘플 수를 늘려 특정 샘플에 특화된 패턴을 가지지 않도록 하였고,
노드 분할의 최소 샘플 개수를 조정하여 모델의 목잡도를 제한하고, 과적합을 방지하고자 했습니다.
오른쪽의 트리는 사용한 모델의 첫 번째 트리를 예시로 나타낸 것입니다.

6. 
마지막으로 신규 고객 데이터를 구현한 모델에 적용하여 신규 고객의 이탈 여부를 판단하고자 했습니다.
모델의 평가 기준은 정확도, 정밀도, 재현율, F1스코어로 
정확도 만으로는 모델의 성능을 판단하기 어렵다고 생각했기에,
이탈로 예측된 것 중에서 실제로 이탈인 것의 비율인 정밀도와
실제 이탈 중에서 이탈로 예측된 비율인 재현율,
그리고 이 둘의 조화 평균인 f1스코어를 추가적인 성능 지표로 설정했습니다.
베이스 모델의 과적합을 완화하여 개선 모델을 만들었고, 아직도 높은 성능을 보여줍니다.
신규 고객의 이탈 여부는, 2022년 4월 이후에 가입한 뒤 마지막 날까지 거래가 없는 고객을 이탈로 설정했습니다.
해당 모델을 신규 데이터에 적용해 보니 랜덤 포레스트 모델의 정확도는 90%의 정확도를 보여줬습니다.

모델 구현에 대한 발표는 이것으로 마치고, 다음은 김소연 팀원이 액션 아이템에 대해 발표를 이어가겠습니다. 